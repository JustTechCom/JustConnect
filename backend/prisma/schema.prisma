model User {
  id          String   @id @default(cuid())
  email       String   @unique
  username    String   @unique
  firstName   String
  lastName    String
  avatar      String?
  bio         String?
  isOnline    Boolean  @default(false)
  lastSeen    DateTime @default(now())
  password    String
  verified    Boolean  @default(false)
  role        Role     @default(USER)
  banned      Boolean  @default(false)
  banReason   String?
  banExpiresAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  sentMessages     Message[] @relation("MessageSender")
  chatMembers      ChatMember[]
  createdChats     Chat[]    @relation("ChatCreator")
  files            File[]
  subscriptions    Subscription[]

  @@map("users")
}

model File {
  id          String   @id @default(cuid())
  userId      String
  filename    String
  mimeType    String
  size        Int
  s3Key       String
  url         String
  thumbnailUrl String?
  duration    Int?
  metadata    Json?
  createdAt   DateTime @default(now())
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages    Message[]

  @@map("files")
}

model Subscription {
  id                   String   @id @default(cuid())
  userId               String
  planId               String
  stripeSubscriptionId String   @unique
  stripeCustomerId     String
  status               String
  currentPeriodStart   DateTime
  currentPeriodEnd     DateTime
  cancelledAt          DateTime?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("subscriptions")
}

model Invoice {
  id          String   @id @default(cuid())
  userId      String
  amount      Float
  currency    String
  description String
  status      String
  dueDate     DateTime
  paidAt      DateTime?
  createdAt   DateTime @default(now())

  @@map("invoices")
}

model Broadcast {
  id        String   @id @default(cuid())
  title     String
  message   String
  type      String
  sentBy    String
  sentAt    DateTime
  createdAt DateTime @default(now())

  @@map("broadcasts")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}